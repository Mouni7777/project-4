name: Deploy Spring Boot Hello World Application to EKS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ca-central-1
  ECR_REPOSITORY: springboot-ecr
  CLUSTER_NAME: springboot-eks-cluster
  CONTAINER_NAME: springboot

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Terraform Setup & Apply (Create EKS cluster)
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve

    # Configure AWS Credentials for other AWS CLI commands
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Ensure ECR Repository Exists
    - name: Ensure ECR Repository Exists
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
        aws ecr create-repository --repository-name $ECR_REPOSITORY

    # Login to Amazon ECR
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    # Update Kubernetes manifest image with the pushed image URI
    - name: Update K8s manifest
      run: |
        sed -i "s|<IMAGE>|$IMAGE_URI|g" deployment.yaml

    # Setup kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    # Update kubeconfig to interact with EKS cluster created by Terraform
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    # Deploy Kubernetes resources
    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
